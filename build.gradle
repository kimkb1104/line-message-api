plugins {
    id 'org.springframework.boot' version '2.2.13.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.kimkb1104'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'com.linecorp.bot:line-bot-spring-boot:4.5.0'
    implementation 'com.linecorp.bot:line-bot-api-client:4.5.0'
    implementation 'com.linecorp.bot:line-bot-model:4.5.0'
    implementation 'com.linecorp.bot:line-bot-servlet:4.5.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'com.h2database:h2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = '0.8.5'
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, excludes: [
                    '**/LineMessageApplication.class',
                    '**/LineEventHandler.class'
            ])
        }))
    }

    finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.70
            }

            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.70
            }

            excludes = [
                    '**.*LineMessageApplication*',
                    '**.*LineEventHandler*'
            ]
        }
    }
}